---
## EMUsort configuration file

# Dataset parameters
# provide information specific to the dataset you want to sort
Data:
    dataset_type: 'openephys' # can be 'openephys', 'nwb', 'blackrock', 'intan' or 'binary'
    # below two settings are only used when 'openephys' dataset_type is chosen
    openephys_experiment_id: 0 # for openephys recordings with several experiment per session, index of the experiment to use (corresponds to "block_index" in spikeinterface)
    openephys_stream_id: 0 # for openephys recordings with several streams, index of the stream to use
    # below three settings are only used when 'binary' dataset_type is chosen
    binary_sampling_rate: # sampling rate of the emg data in binary file(s)
    binary_num_channels: # number of channels in the recording in binary file(s)
    binary_dtype: 'int16' # data type of the emg data in binary file(s)
    emg_recordings: [0] # index of each recording (index into file names of matching dataset_type in the session folder, sorted alphanumerically)
    # if multiple emg_recordings are chosen, they will be concatenated prior to sorting (can be [all] or a list of integers, e.g., [0,1,2,5,6])
    emg_passband: # low and high passband frequencies for emg data, in Hz
        - 250
        - 5000
    time_range: # start and end times to slice along time, set both to 0 to use all data
        - 0
        - 0

# Sorting parameters
Sorting:
    output_folder: # if left blank, will output into the path provided by the session_folder argument
    GPU_to_use: [0] # GPU to use for kilosort, (a list of integers, e.g., [0,1,2,5,6])
    num_KS_jobs: 1 # number of Kilosort jobs to be distributed across all chosen GPUs (will run parallel jobs if >1)
    # setting num_KS_jobs > 1 can only be used when do_KS_param_gridsearch is true
    # but do_KS_param_gridsearch can be true when num_KS_jobs = 1
    do_KS_param_gridsearch: false # set to true to run multiple sorting jobs with different parameters
    # when do_KS_param_gridsearch is false, only the first rows of each gridsearch_KS_params are used (defaults)
    gridsearch_KS_params: #  
        Th: # in format [Th_universal, Th_learned] for each element
            - [9, 8] # default setting for EMUsort
            - [10, 4]
            - [7, 3]
            - [5, 2]
            - [2, 1]
        spkTh: # Th_single_ch (STDs), EMUsort allows aggregation of multiple thresholds
            - [6, 9, 12, 15] # default setting for EMUsort
            - [6, 9, 12]
            - [3, 6, 9]
            - [6, 9]
            - [6]

# Group-specific parameters
# channel groups are sorted separately (used for single muscles), rows of each parameter define settings for each group
Group:
    emg_chan_list: # Which channels to sort, zero-indexed (can be [all] or a list of integers, e.g., [0,1,2,5,6])
        - [all] # default setting to include all channels
        #- [0,1,2,3,4,5,6,7] # this row defines channels to use for the second group
        #- [8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31] # third group
    remove_bad_emg_chans: # false to disable, or a string for the method. Can be 'coherence+psd', 'mad', 'std', 'mad#', or 'std#', where # is the desired threshold (int/float, true defaults to 'mad5'). See spikeinterface's detect_bad_channels() method for more info.
        - false
        #- true # if true, the second group would have bad chans removed by 'mad5' method
        #- std4 # if 'std4', the third group would have bad chans removed by 'std' method with threshold 4

# Kilosort parameters
# nearest_chans and torch_device may be modified in emusort.py to avoid errors
KS:
    remove_chan_delays: true # EMUsort setting, will apply channel delays to optimally align MUAPs
    remove_spike_outliers: true # EMUsort setting, will use HDBSCAN to remove outlier isolated spikes during initialization
    batch_size: 60000
    nblocks: 0
    do_CAR: false
    invert_sign: false
    nt: 61
    artifact_threshold:
    nskip: 2
    whitening_range: 32
    binning_depth: 5
    sig_interp: 20
    nt0min:
    dmin:
    dminx: 32
    min_template_size: 10
    template_sizes: 5
    nearest_chans: 10
    nearest_templates: 100
    templates_from_data: true
    n_templates: 9
    n_pcs: 9
    acg_threshold: 0.2
    ccg_threshold: 0.25
    cluster_downsampling: 20
    cluster_pcs: 64
    duplicate_spike_bins: 15
    do_correction: false
    keep_good_only: false
    save_extra_kwargs: false
    skip_kilosort_preprocessing: false
    scaleproc:
    torch_device: auto

# SpikeInterface parameters
SI:
    chunk_duration: '20s' # Chunk duration in seconds if float or with units if str (e.g. '1s', '500ms')
    max_concurrent_tasks: 5 # number of I/O tasks to run in parallel (faster, but too high can produce "Too many open files" error)